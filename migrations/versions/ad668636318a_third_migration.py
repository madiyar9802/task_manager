"""Third migration

Revision ID: ad668636318a
Revises: 8e77a3d255fe
Create Date: 2024-05-27 00:18:53.875147

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ad668636318a'
down_revision: Union[str, None] = '8e77a3d255fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the ENUM type
    op.execute("CREATE TYPE taskstatusenum AS ENUM ('New', 'In progress', 'Done');")

    # Update the column type with USING
    op.alter_column('status', 'name',
                    existing_type=postgresql.ENUM('New', 'In progress', 'Done', name='taskstatusenum'),
                    type_=sa.Enum('NEW', 'IN_PROGRESS', 'DONE', name='taskstatusenum'),
                    existing_nullable=False,
                    postgresql_using="name::text::taskstatusenum")

    # Add unique constraints
    op.create_unique_constraint(None, 'executors', ['email'])
    op.create_unique_constraint(None, 'executors', ['login'])
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop ENUM type
    op.execute("DROP TYPE IF EXISTS taskstatusenum;")

    # Revert the column type with USING
    op.alter_column('status', 'name',
                    existing_type=sa.Enum('NEW', 'IN_PROGRESS', 'DONE', name='taskstatusenum'),
                    type_=postgresql.ENUM('New', 'In progress', 'Done', name='taskstatusenum'),
                    existing_nullable=False,
                    postgresql_using="name::text::taskstatusenum")

    # Drop unique constraints
    op.drop_constraint(None, 'executors', type_='unique')
    op.drop_constraint(None, 'executors', type_='unique')
    # ### end Alembic commands ###
